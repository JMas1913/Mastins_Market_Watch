{"ast":null,"code":"var _jsxFileName = \"/Users/mastinfitness/Desktop/General_Assembly/ga_seir/projects/project_4/Mastins_Market_Watch/client/mastin_market_watch_frontend/src/components/Validator.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Validator = () => {\n  _s();\n\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfrimPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [isValid, setIsValid] = useState(false);\n\n  const check = () => {\n    if (username.length > 0 && password.length >= 7 && confirmPassword === password) {\n      setIsValid(true);\n      submit();\n    } else {\n      setIsValid(false);\n      submit();\n    }\n  };\n\n  const submit = e => {\n    e.preventDefault();\n\n    if (setIsValid === true) {\n      return \"Valid\";\n    } else setIsValid === false;\n\n    return \"Invalid\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        id: \"username\",\n        value: username,\n        onChange: e => {\n          setUsername(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        id: \"password\",\n        value: password,\n        onChange: e => {\n          setPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm password\",\n        id: \"passwordConfirm\",\n        value: confirmPassword,\n        onChange: e => {\n          setConfrimPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"passwordConfirm\",\n        children: \"Confirm password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        placeholder: \"\",\n        id: \"submit\",\n        value: check ? true : false,\n        onClick: check,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Passwords must match.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Password must be at least 7 characters in length.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Validator, \"dw8UI3lADxUMcL7HOgIhVmQbZVQ=\");\n\n_c = Validator;\nexport default Validator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Validator\");","map":{"version":3,"sources":["/Users/mastinfitness/Desktop/General_Assembly/ga_seir/projects/project_4/Mastins_Market_Watch/client/mastin_market_watch_frontend/src/components/Validator.jsx"],"names":["useState","Validator","password","setPassword","confirmPassword","setConfrimPassword","username","setUsername","isValid","setIsValid","check","length","submit","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import { useState } from 'react'\n\nconst Validator = () => {\n\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfrimPassword] = useState('')\n    const [username, setUsername] = useState('')\n    const [isValid, setIsValid] = useState(false)\n\n    const check = () => {\n        if (username.length > 0 && password.length >= 7 && confirmPassword === password) {\n            setIsValid(true)\n            submit()\n        }\n        else {\n            setIsValid(false)\n            submit()\n        }\n    }\n\n    const submit = (e) => {\n        e.preventDefault()\n        if (setIsValid === true) {\n            return \"Valid\"\n        }\n        else (setIsValid === false)\n        return \"Invalid\"\n    }\n\n\n\n    return (\n        <div className=\"form\">\n            <h1>Sign Up</h1>\n            <form>\n                <input type=\"text\" placeholder=\"Username\" id=\"username\" value={username} onChange={(e) => { setUsername(e.target.value) }} />\n                <label htmlFor=\"username\">Username</label>\n\n                <input type=\"password\" placeholder=\"Password\" id=\"password\" value={password} onChange={(e) => { setPassword(e.target.value) }} />\n                <label htmlFor=\"password\">Password</label>\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    id=\"passwordConfirm\"\n                    value={confirmPassword} onChange={(e) => { setConfrimPassword(e.target.value) }}\n                />\n                <label htmlFor=\"passwordConfirm\">Confirm password</label>\n\n\n                <button type=\"submit\"\n                    placeholder=\"\"\n                    id=\"submit\"\n                    value={check ? true : false}\n                    onClick={check}>Sign Up</button>\n                <p>Passwords must match.</p>\n                <p>Password must be at least 7 characters in length.</p>\n            </form>\n        </div>\n    )\n}\n\nexport default Validator\n"]},"metadata":{},"sourceType":"module"}